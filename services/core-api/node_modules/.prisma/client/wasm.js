
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  firstName: 'firstName',
  lastName: 'lastName',
  profileImageUrl: 'profileImageUrl',
  preferredLanguage: 'preferredLanguage',
  themePreference: 'themePreference',
  emailVerified: 'emailVerified',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastLogin: 'lastLogin',
  cognitoUserId: 'cognitoUserId'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy'
};

exports.Prisma.PermissionScalarFieldEnum = {
  id: 'id',
  roleId: 'roleId',
  resource: 'resource',
  action: 'action',
  createdAt: 'createdAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  status: 'status',
  value: 'value',
  deadline: 'deadline',
  progressPercentage: 'progressPercentage',
  createdBy: 'createdBy',
  completedBy: 'completedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  completedAt: 'completedAt',
  metadata: 'metadata'
};

exports.Prisma.ProjectDocumentScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  fileName: 'fileName',
  filePath: 'filePath',
  fileType: 'fileType',
  fileSize: 'fileSize',
  rawFileLocation: 'rawFileLocation',
  processedFileLocation: 'processedFileLocation',
  uploadedBy: 'uploadedBy',
  uploadedAt: 'uploadedAt',
  metadata: 'metadata'
};

exports.Prisma.ProjectMemberScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  userId: 'userId',
  addedById: 'addedById',
  joinedAt: 'joinedAt'
};

exports.Prisma.WorkflowExecutionScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  status: 'status',
  initiatedBy: 'initiatedBy',
  handledBy: 'handledBy',
  completedBy: 'completedBy',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  lastUpdatedAt: 'lastUpdatedAt',
  workflowConfig: 'workflowConfig',
  errorLog: 'errorLog',
  errorMessage: 'errorMessage',
  results: 'results'
};

exports.Prisma.AgentTaskScalarFieldEnum = {
  id: 'id',
  workflowExecutionId: 'workflowExecutionId',
  initiatedBy: 'initiatedBy',
  handledBy: 'handledBy',
  completedBy: 'completedBy',
  agent: 'agent',
  status: 'status',
  sequenceOrder: 'sequenceOrder',
  inputData: 'inputData',
  outputData: 'outputData',
  taskConfig: 'taskConfig',
  errorLog: 'errorLog',
  errorMessage: 'errorMessage',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  executionTimeSeconds: 'executionTimeSeconds'
};

exports.Prisma.ArtifactScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  name: 'name',
  type: 'type',
  category: 'category',
  status: 'status',
  createdBy: 'createdBy',
  approvedBy: 'approvedBy',
  createdAt: 'createdAt',
  approvedAt: 'approvedAt'
};

exports.Prisma.ArtifactVersionScalarFieldEnum = {
  id: 'id',
  artifactId: 'artifactId',
  versionNumber: 'versionNumber',
  content: 'content',
  location: 'location',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.KnowledgeBaseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  scope: 'scope',
  projectId: 'projectId',
  documentCount: 'documentCount',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  vectorStoreId: 'vectorStoreId'
};

exports.Prisma.KnowledgeBaseDocumentScalarFieldEnum = {
  id: 'id',
  knowledgeBaseId: 'knowledgeBaseId',
  fileName: 'fileName',
  filePath: 'filePath',
  fileType: 'fileType',
  fileSize: 'fileSize',
  s3Bucket: 's3Bucket',
  s3Key: 's3Key',
  uploadedBy: 'uploadedBy',
  uploadedAt: 'uploadedAt',
  metadata: 'metadata',
  vectorIds: 'vectorIds'
};

exports.Prisma.KnowledgeBasePermissionScalarFieldEnum = {
  id: 'id',
  knowledgeBaseId: 'knowledgeBaseId',
  userId: 'userId',
  roleId: 'roleId',
  permissionType: 'permissionType',
  grantedAt: 'grantedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  message: 'message',
  read: 'read',
  metadata: 'metadata',
  createdAt: 'createdAt',
  readAt: 'readAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  action: 'action',
  resourceType: 'resourceType',
  resourceId: 'resourceId',
  previousState: 'previousState',
  newState: 'newState',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt'
};

exports.Prisma.AgentConfigurationScalarFieldEnum = {
  id: 'id',
  agentType: 'agentType',
  modelName: 'modelName',
  temperature: 'temperature',
  maxTokens: 'maxTokens',
  systemPrompt: 'systemPrompt',
  additionalParameters: 'additionalParameters',
  enabled: 'enabled',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.IntegrationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  configuration: 'configuration',
  enabled: 'enabled',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IntegrationLogScalarFieldEnum = {
  id: 'id',
  integrationId: 'integrationId',
  action: 'action',
  status: 'status',
  requestData: 'requestData',
  responseData: 'responseData',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt'
};

exports.Prisma.BidStatisticsScalarFieldEnum = {
  id: 'id',
  periodStart: 'periodStart',
  periodEnd: 'periodEnd',
  submittedBids: 'submittedBids',
  wonBids: 'wonBids',
  totalValue: 'totalValue',
  wonValue: 'wonValue',
  successRate: 'successRate',
  activeRfps: 'activeRfps',
  detailedMetrics: 'detailedMetrics',
  calculatedAt: 'calculatedAt'
};

exports.Prisma.SubmissionRecordScalarFieldEnum = {
  id: 'id',
  projectId: 'projectId',
  artifactId: 'artifactId',
  portalName: 'portalName',
  submissionId: 'submissionId',
  status: 'status',
  submittedBy: 'submittedBy',
  submittedAt: 'submittedAt',
  submissionMetadata: 'submissionMetadata'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRole: 'UserRole',
  Permission: 'Permission',
  Project: 'Project',
  ProjectDocument: 'ProjectDocument',
  ProjectMember: 'ProjectMember',
  WorkflowExecution: 'WorkflowExecution',
  AgentTask: 'AgentTask',
  Artifact: 'Artifact',
  ArtifactVersion: 'ArtifactVersion',
  KnowledgeBase: 'KnowledgeBase',
  KnowledgeBaseDocument: 'KnowledgeBaseDocument',
  KnowledgeBasePermission: 'KnowledgeBasePermission',
  Notification: 'Notification',
  AuditLog: 'AuditLog',
  AgentConfiguration: 'AgentConfiguration',
  Integration: 'Integration',
  IntegrationLog: 'IntegrationLog',
  BidStatistics: 'BidStatistics',
  SubmissionRecord: 'SubmissionRecord'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/cbandara/Projects/MyProjects/bidopsai/services/core-api/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/cbandara/Projects/MyProjects/bidopsai/services/core-api/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// Prisma Schema for BidOps.AI Platform\n// Source: specs/002-create-a-graphql/data-model.md\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================\n// USER MANAGEMENT\n// ============================================\n\nmodel User {\n  id                String    @id @default(uuid()) @db.Uuid\n  email             String    @unique\n  username          String    @unique\n  passwordHash      String?   @map(\"password_hash\")\n  firstName         String    @map(\"first_name\")\n  lastName          String    @map(\"last_name\")\n  profileImageUrl   String?   @map(\"profile_image_url\")\n  preferredLanguage String?   @default(\"en\") @map(\"preferred_language\")\n  themePreference   String?   @default(\"light\") @map(\"theme_preference\")\n  emailVerified     Boolean   @default(false) @map(\"email_verified\")\n  createdAt         DateTime  @default(now()) @map(\"created_at\")\n  updatedAt         DateTime  @updatedAt @map(\"updated_at\")\n  lastLogin         DateTime? @map(\"last_login\")\n  cognitoUserId     String    @unique @map(\"cognito_user_id\")\n\n  // Relations\n  roles                   UserRole[]\n  projectMemberships      ProjectMember[]\n  createdProjects         Project[]               @relation(\"ProjectCreator\")\n  completedProjects       Project[]               @relation(\"ProjectCompleter\")\n  notifications           Notification[]\n  auditLogs               AuditLog[]\n  uploadedDocuments       ProjectDocument[]\n  createdKnowledgeBases   KnowledgeBase[]\n  createdArtifacts        Artifact[]              @relation(\"ArtifactCreator\")\n  approvedArtifacts       Artifact[]              @relation(\"ArtifactApprover\")\n  submissions             SubmissionRecord[]\n  createdIntegrations     Integration[]\n  uploadedKBDocuments     KnowledgeBaseDocument[]\n  createdArtifactVersions ArtifactVersion[]\n\n  @@index([email])\n  @@index([cognitoUserId])\n  @@map(\"users\")\n}\n\nmodel Role {\n  id          String   @id @default(uuid()) @db.Uuid\n  name        String   @unique\n  description String?\n  createdAt   DateTime @default(now()) @map(\"created_at\")\n  updatedAt   DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  userRoles     UserRole[]\n  permissions   Permission[]\n  kbPermissions KnowledgeBasePermission[]\n\n  @@map(\"roles\")\n}\n\nmodel UserRole {\n  id         String   @id @default(uuid()) @db.Uuid\n  userId     String   @map(\"user_id\") @db.Uuid\n  roleId     String   @map(\"role_id\") @db.Uuid\n  assignedAt DateTime @default(now()) @map(\"assigned_at\")\n  assignedBy String?  @map(\"assigned_by\") @db.Uuid\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, roleId])\n  @@index([userId])\n  @@index([roleId])\n  @@map(\"user_roles\")\n}\n\nmodel Permission {\n  id        String   @id @default(uuid()) @db.Uuid\n  roleId    String   @map(\"role_id\") @db.Uuid\n  resource  String\n  action    String\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  // Relations\n  role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@unique([roleId, resource, action])\n  @@index([roleId])\n  @@map(\"permissions\")\n}\n\n// ============================================\n// PROJECT MANAGEMENT\n// ============================================\n\nmodel Project {\n  id                 String    @id @default(uuid()) @db.Uuid\n  name               String\n  description        String?   @db.Text\n  status             String    @default(\"OPEN\")\n  value              Decimal?  @db.Decimal(15, 2)\n  deadline           DateTime? @db.Date\n  progressPercentage Int       @default(0) @map(\"progress_percentage\")\n  createdBy          String    @map(\"created_by\") @db.Uuid\n  completedBy        String?   @map(\"completed_by\") @db.Uuid\n  createdAt          DateTime  @default(now()) @map(\"created_at\")\n  updatedAt          DateTime  @updatedAt @map(\"updated_at\")\n  completedAt        DateTime? @map(\"completed_at\")\n  metadata           Json?\n\n  // Relations\n  creator            User                @relation(\"ProjectCreator\", fields: [createdBy], references: [id])\n  completer          User?               @relation(\"ProjectCompleter\", fields: [completedBy], references: [id])\n  members            ProjectMember[]\n  documents          ProjectDocument[]\n  knowledgeBases     KnowledgeBase[]\n  artifacts          Artifact[]\n  workflowExecutions WorkflowExecution[]\n  submissions        SubmissionRecord[]\n\n  @@index([status, createdAt])\n  @@index([createdBy])\n  @@index([deadline])\n  @@map(\"projects\")\n}\n\nmodel ProjectDocument {\n  id                    String   @id @default(uuid()) @db.Uuid\n  projectId             String   @map(\"project_id\") @db.Uuid\n  fileName              String   @map(\"file_name\")\n  filePath              String   @map(\"file_path\")\n  fileType              String   @map(\"file_type\")\n  fileSize              BigInt   @map(\"file_size\")\n  rawFileLocation       String   @map(\"raw_file_location\")\n  processedFileLocation String?  @map(\"processed_file_location\")\n  uploadedBy            String   @map(\"uploaded_by\") @db.Uuid\n  uploadedAt            DateTime @default(now()) @map(\"uploaded_at\")\n  metadata              Json?\n\n  // Relations\n  project  Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  uploader User    @relation(fields: [uploadedBy], references: [id])\n\n  @@index([projectId])\n  @@map(\"project_documents\")\n}\n\nmodel ProjectMember {\n  id        String   @id @default(uuid()) @db.Uuid\n  projectId String   @map(\"project_id\") @db.Uuid\n  userId    String   @map(\"user_id\") @db.Uuid\n  addedById String   @map(\"added_by_id\") @db.Uuid\n  joinedAt  DateTime @default(now()) @map(\"joined_at\")\n\n  // Relations\n  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([projectId, userId])\n  @@index([projectId])\n  @@index([userId])\n  @@map(\"project_members\")\n}\n\n// ============================================\n// WORKFLOW EXECUTION\n// ============================================\n\nmodel WorkflowExecution {\n  id             String    @id @default(uuid()) @db.Uuid\n  projectId      String    @map(\"project_id\") @db.Uuid\n  status         String    @default(\"OPEN\")\n  initiatedBy    String    @map(\"initiated_by\") @db.Uuid\n  handledBy      String?   @map(\"handled_by\") @db.Uuid\n  completedBy    String?   @map(\"completed_by\") @db.Uuid\n  startedAt      DateTime  @default(now()) @map(\"started_at\")\n  completedAt    DateTime? @map(\"completed_at\")\n  lastUpdatedAt  DateTime  @updatedAt @map(\"last_updated_at\")\n  workflowConfig Json?     @map(\"workflow_config\")\n  errorLog       Json?     @map(\"error_log\")\n  errorMessage   String?   @map(\"error_message\") @db.Text\n  results        Json?\n\n  // Relations\n  project    Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  agentTasks AgentTask[]\n\n  @@index([projectId, status])\n  @@index([status, lastUpdatedAt])\n  @@map(\"workflow_executions\")\n}\n\nmodel AgentTask {\n  id                   String    @id @default(uuid()) @db.Uuid\n  workflowExecutionId  String    @map(\"workflow_execution_id\") @db.Uuid\n  initiatedBy          String    @map(\"initiated_by\") @db.Uuid\n  handledBy            String?   @map(\"handled_by\") @db.Uuid\n  completedBy          String?   @map(\"completed_by\") @db.Uuid\n  agent                String\n  status               String    @default(\"OPEN\")\n  sequenceOrder        Int       @map(\"sequence_order\")\n  inputData            Json?     @map(\"input_data\")\n  outputData           Json?     @map(\"output_data\")\n  taskConfig           Json?     @map(\"task_config\")\n  errorLog             Json?     @map(\"error_log\")\n  errorMessage         String?   @map(\"error_message\") @db.Text\n  startedAt            DateTime? @map(\"started_at\")\n  completedAt          DateTime? @map(\"completed_at\")\n  executionTimeSeconds Float?    @map(\"execution_time_seconds\")\n\n  // Relations\n  workflowExecution WorkflowExecution @relation(fields: [workflowExecutionId], references: [id], onDelete: Cascade)\n\n  @@index([workflowExecutionId, sequenceOrder])\n  @@index([status])\n  @@map(\"agent_tasks\")\n}\n\n// ============================================\n// ARTIFACTS\n// ============================================\n\nmodel Artifact {\n  id         String    @id @default(uuid()) @db.Uuid\n  projectId  String    @map(\"project_id\") @db.Uuid\n  name       String\n  type       String\n  category   String\n  status     String    @default(\"DRAFT\")\n  createdBy  String    @map(\"created_by\") @db.Uuid\n  approvedBy String?   @map(\"approved_by\") @db.Uuid\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  approvedAt DateTime? @map(\"approved_at\")\n\n  // Relations\n  project     Project            @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  creator     User               @relation(\"ArtifactCreator\", fields: [createdBy], references: [id])\n  approver    User?              @relation(\"ArtifactApprover\", fields: [approvedBy], references: [id])\n  versions    ArtifactVersion[]\n  submissions SubmissionRecord[]\n\n  @@index([projectId, status])\n  @@index([createdAt])\n  @@map(\"artifacts\")\n}\n\nmodel ArtifactVersion {\n  id            String   @id @default(uuid()) @db.Uuid\n  artifactId    String   @map(\"artifact_id\") @db.Uuid\n  versionNumber Int      @map(\"version_number\")\n  content       Json\n  location      String?\n  createdBy     String   @map(\"created_by\") @db.Uuid\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n\n  // Relations\n  artifact Artifact @relation(fields: [artifactId], references: [id], onDelete: Cascade)\n  creator  User     @relation(fields: [createdBy], references: [id])\n\n  @@unique([artifactId, versionNumber])\n  @@index([artifactId])\n  @@index([createdAt])\n  @@map(\"artifact_versions\")\n}\n\n// ============================================\n// KNOWLEDGE BASES\n// ============================================\n\nmodel KnowledgeBase {\n  id            String   @id @default(uuid()) @db.Uuid\n  name          String\n  description   String?  @db.Text\n  scope         String\n  projectId     String?  @map(\"project_id\") @db.Uuid\n  documentCount Int      @default(0) @map(\"document_count\")\n  createdBy     String   @map(\"created_by\") @db.Uuid\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n  vectorStoreId String?  @map(\"vector_store_id\")\n\n  // Relations\n  project     Project?                  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  creator     User                      @relation(fields: [createdBy], references: [id])\n  documents   KnowledgeBaseDocument[]\n  permissions KnowledgeBasePermission[]\n\n  @@index([scope])\n  @@index([projectId])\n  @@map(\"knowledge_bases\")\n}\n\nmodel KnowledgeBaseDocument {\n  id              String   @id @default(uuid()) @db.Uuid\n  knowledgeBaseId String   @map(\"knowledge_base_id\") @db.Uuid\n  fileName        String   @map(\"file_name\")\n  filePath        String   @map(\"file_path\")\n  fileType        String   @map(\"file_type\")\n  fileSize        BigInt   @map(\"file_size\")\n  s3Bucket        String   @map(\"s3_bucket\")\n  s3Key           String   @map(\"s3_key\")\n  uploadedBy      String   @map(\"uploaded_by\") @db.Uuid\n  uploadedAt      DateTime @default(now()) @map(\"uploaded_at\")\n  metadata        Json?\n  vectorIds       String?  @map(\"vector_ids\")\n\n  // Relations\n  knowledgeBase KnowledgeBase @relation(fields: [knowledgeBaseId], references: [id], onDelete: Cascade)\n  uploader      User          @relation(fields: [uploadedBy], references: [id])\n\n  @@index([knowledgeBaseId])\n  @@map(\"knowledge_base_documents\")\n}\n\nmodel KnowledgeBasePermission {\n  id              String   @id @default(uuid()) @db.Uuid\n  knowledgeBaseId String   @map(\"knowledge_base_id\") @db.Uuid\n  userId          String?  @map(\"user_id\") @db.Uuid\n  roleId          String?  @map(\"role_id\") @db.Uuid\n  permissionType  String   @map(\"permission_type\")\n  grantedAt       DateTime @default(now()) @map(\"granted_at\")\n\n  // Relations\n  knowledgeBase KnowledgeBase @relation(fields: [knowledgeBaseId], references: [id], onDelete: Cascade)\n  role          Role?         @relation(fields: [roleId], references: [id], onDelete: Cascade)\n\n  @@index([knowledgeBaseId])\n  @@map(\"knowledge_base_permissions\")\n}\n\n// ============================================\n// NOTIFICATIONS & AUDIT\n// ============================================\n\nmodel Notification {\n  id        String    @id @default(uuid()) @db.Uuid\n  userId    String    @map(\"user_id\") @db.Uuid\n  type      String\n  title     String\n  message   String    @db.Text\n  read      Boolean   @default(false)\n  metadata  Json?\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  readAt    DateTime? @map(\"read_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, read])\n  @@index([createdAt])\n  @@map(\"notifications\")\n}\n\nmodel AuditLog {\n  id            String   @id @default(uuid()) @db.Uuid\n  userId        String   @map(\"user_id\") @db.Uuid\n  action        String\n  resourceType  String   @map(\"resource_type\")\n  resourceId    String   @map(\"resource_id\") @db.Uuid\n  previousState Json?    @map(\"previous_state\")\n  newState      Json?    @map(\"new_state\")\n  ipAddress     String?  @map(\"ip_address\")\n  userAgent     String?  @map(\"user_agent\")\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n\n  // Relations\n  user User @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([resourceType, resourceId])\n  @@index([createdAt])\n  @@map(\"audit_logs\")\n}\n\n// ============================================\n// SYSTEM CONFIGURATION\n// ============================================\n\nmodel AgentConfiguration {\n  id                   String   @id @default(uuid()) @db.Uuid\n  agentType            String   @unique @map(\"agent_type\")\n  modelName            String   @map(\"model_name\")\n  temperature          Float    @default(0.7)\n  maxTokens            Int      @map(\"max_tokens\")\n  systemPrompt         Json     @map(\"system_prompt\")\n  additionalParameters Json?    @map(\"additional_parameters\")\n  enabled              Boolean  @default(true)\n  createdAt            DateTime @default(now()) @map(\"created_at\")\n  updatedAt            DateTime @updatedAt @map(\"updated_at\")\n  updatedBy            String?  @map(\"updated_by\") @db.Uuid\n\n  @@map(\"agent_configurations\")\n}\n\nmodel Integration {\n  id            String   @id @default(uuid()) @db.Uuid\n  type          String   @unique\n  name          String\n  configuration Json\n  enabled       Boolean  @default(true)\n  createdBy     String   @map(\"created_by\") @db.Uuid\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n  updatedAt     DateTime @updatedAt @map(\"updated_at\")\n\n  // Relations\n  creator User             @relation(fields: [createdBy], references: [id])\n  logs    IntegrationLog[]\n\n  @@map(\"integrations\")\n}\n\nmodel IntegrationLog {\n  id            String   @id @default(uuid()) @db.Uuid\n  integrationId String   @map(\"integration_id\") @db.Uuid\n  action        String\n  status        String\n  requestData   Json?    @map(\"request_data\")\n  responseData  Json?    @map(\"response_data\")\n  errorMessage  String?  @map(\"error_message\") @db.Text\n  createdAt     DateTime @default(now()) @map(\"created_at\")\n\n  // Relations\n  integration Integration @relation(fields: [integrationId], references: [id], onDelete: Cascade)\n\n  @@index([integrationId])\n  @@index([createdAt])\n  @@map(\"integration_logs\")\n}\n\n// ============================================\n// STATISTICS & SUBMISSIONS\n// ============================================\n\nmodel BidStatistics {\n  id              String   @id @default(uuid()) @db.Uuid\n  periodStart     DateTime @map(\"period_start\") @db.Date\n  periodEnd       DateTime @map(\"period_end\") @db.Date\n  submittedBids   Int      @map(\"submitted_bids\")\n  wonBids         Int      @map(\"won_bids\")\n  totalValue      Decimal  @map(\"total_value\") @db.Decimal(15, 2)\n  wonValue        Decimal  @map(\"won_value\") @db.Decimal(15, 2)\n  successRate     Float    @map(\"success_rate\")\n  activeRfps      Int      @map(\"active_rfps\")\n  detailedMetrics Json?    @map(\"detailed_metrics\")\n  calculatedAt    DateTime @default(now()) @map(\"calculated_at\")\n\n  @@unique([periodStart, periodEnd])\n  @@index([periodStart, periodEnd])\n  @@map(\"bid_statistics\")\n}\n\nmodel SubmissionRecord {\n  id                 String   @id @default(uuid()) @db.Uuid\n  projectId          String   @map(\"project_id\") @db.Uuid\n  artifactId         String   @map(\"artifact_id\") @db.Uuid\n  portalName         String   @map(\"portal_name\")\n  submissionId       String?  @map(\"submission_id\")\n  status             String\n  submittedBy        String   @map(\"submitted_by\") @db.Uuid\n  submittedAt        DateTime @default(now()) @map(\"submitted_at\")\n  submissionMetadata Json?    @map(\"submission_metadata\")\n\n  // Relations\n  project  Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)\n  artifact Artifact @relation(fields: [artifactId], references: [id])\n  user     User     @relation(fields: [submittedBy], references: [id])\n\n  @@index([projectId])\n  @@index([status])\n  @@map(\"submission_records\")\n}\n",
  "inlineSchemaHash": "0faea17fc62400a56f3aae884b1faaa0da18306cb485e8e6b9b7bc51f9501429",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"profileImageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"profile_image_url\"},{\"name\":\"preferredLanguage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"preferred_language\"},{\"name\":\"themePreference\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"theme_preference\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"email_verified\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login\"},{\"name\":\"cognitoUserId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"cognito_user_id\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"projectMemberships\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectMemberToUser\"},{\"name\":\"createdProjects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectCreator\"},{\"name\":\"completedProjects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectCompleter\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"uploadedDocuments\",\"kind\":\"object\",\"type\":\"ProjectDocument\",\"relationName\":\"ProjectDocumentToUser\"},{\"name\":\"createdKnowledgeBases\",\"kind\":\"object\",\"type\":\"KnowledgeBase\",\"relationName\":\"KnowledgeBaseToUser\"},{\"name\":\"createdArtifacts\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactCreator\"},{\"name\":\"approvedArtifacts\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactApprover\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"SubmissionRecord\",\"relationName\":\"SubmissionRecordToUser\"},{\"name\":\"createdIntegrations\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"IntegrationToUser\"},{\"name\":\"uploadedKBDocuments\",\"kind\":\"object\",\"type\":\"KnowledgeBaseDocument\",\"relationName\":\"KnowledgeBaseDocumentToUser\"},{\"name\":\"createdArtifactVersions\",\"kind\":\"object\",\"type\":\"ArtifactVersion\",\"relationName\":\"ArtifactVersionToUser\"}],\"dbName\":\"users\"},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"Permission\",\"relationName\":\"PermissionToRole\"},{\"name\":\"kbPermissions\",\"kind\":\"object\",\"type\":\"KnowledgeBasePermission\",\"relationName\":\"KnowledgeBasePermissionToRole\"}],\"dbName\":\"roles\"},\"UserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_id\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"assigned_at\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assigned_by\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":\"user_roles\"},\"Permission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_id\"},{\"name\":\"resource\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"PermissionToRole\"}],\"dbName\":\"permissions\"},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deadline\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"progressPercentage\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"progress_percentage\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"completedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"completed_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectCreator\"},{\"name\":\"completer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectCompleter\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"ProjectMember\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"ProjectDocument\",\"relationName\":\"ProjectToProjectDocument\"},{\"name\":\"knowledgeBases\",\"kind\":\"object\",\"type\":\"KnowledgeBase\",\"relationName\":\"KnowledgeBaseToProject\"},{\"name\":\"artifacts\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactToProject\"},{\"name\":\"workflowExecutions\",\"kind\":\"object\",\"type\":\"WorkflowExecution\",\"relationName\":\"ProjectToWorkflowExecution\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"SubmissionRecord\",\"relationName\":\"ProjectToSubmissionRecord\"}],\"dbName\":\"projects\"},\"ProjectDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_name\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_path\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_type\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"file_size\"},{\"name\":\"rawFileLocation\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"raw_file_location\"},{\"name\":\"processedFileLocation\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"processed_file_location\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"uploaded_by\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"uploaded_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectDocument\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectDocumentToUser\"}],\"dbName\":\"project_documents\"},\"ProjectMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"addedById\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"added_by_id\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"joined_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectMember\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectMemberToUser\"}],\"dbName\":\"project_members\"},\"WorkflowExecution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"initiatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"initiated_by\"},{\"name\":\"handledBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"handled_by\"},{\"name\":\"completedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"completed_by\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"lastUpdatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_updated_at\"},{\"name\":\"workflowConfig\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"workflow_config\"},{\"name\":\"errorLog\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"error_log\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"results\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToWorkflowExecution\"},{\"name\":\"agentTasks\",\"kind\":\"object\",\"type\":\"AgentTask\",\"relationName\":\"AgentTaskToWorkflowExecution\"}],\"dbName\":\"workflow_executions\"},\"AgentTask\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"workflowExecutionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"workflow_execution_id\"},{\"name\":\"initiatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"initiated_by\"},{\"name\":\"handledBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"handled_by\"},{\"name\":\"completedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"completed_by\"},{\"name\":\"agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sequenceOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sequence_order\"},{\"name\":\"inputData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"input_data\"},{\"name\":\"outputData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"output_data\"},{\"name\":\"taskConfig\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"task_config\"},{\"name\":\"errorLog\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"error_log\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"executionTimeSeconds\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"execution_time_seconds\"},{\"name\":\"workflowExecution\",\"kind\":\"object\",\"type\":\"WorkflowExecution\",\"relationName\":\"AgentTaskToWorkflowExecution\"}],\"dbName\":\"agent_tasks\"},\"Artifact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"approved_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"approved_at\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ArtifactToProject\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArtifactCreator\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArtifactApprover\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"ArtifactVersion\",\"relationName\":\"ArtifactToArtifactVersion\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"SubmissionRecord\",\"relationName\":\"ArtifactToSubmissionRecord\"}],\"dbName\":\"artifacts\"},\"ArtifactVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"artifactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"artifact_id\"},{\"name\":\"versionNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"version_number\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"artifact\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactToArtifactVersion\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ArtifactVersionToUser\"}],\"dbName\":\"artifact_versions\"},\"KnowledgeBase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"documentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"document_count\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"vectorStoreId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vector_store_id\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"KnowledgeBaseToProject\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnowledgeBaseToUser\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"KnowledgeBaseDocument\",\"relationName\":\"KnowledgeBaseToKnowledgeBaseDocument\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"KnowledgeBasePermission\",\"relationName\":\"KnowledgeBaseToKnowledgeBasePermission\"}],\"dbName\":\"knowledge_bases\"},\"KnowledgeBaseDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"knowledgeBaseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"knowledge_base_id\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_name\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_path\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_type\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"BigInt\",\"dbName\":\"file_size\"},{\"name\":\"s3Bucket\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"s3_bucket\"},{\"name\":\"s3Key\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"s3_key\"},{\"name\":\"uploadedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"uploaded_by\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"uploaded_at\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"vectorIds\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"vector_ids\"},{\"name\":\"knowledgeBase\",\"kind\":\"object\",\"type\":\"KnowledgeBase\",\"relationName\":\"KnowledgeBaseToKnowledgeBaseDocument\"},{\"name\":\"uploader\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnowledgeBaseDocumentToUser\"}],\"dbName\":\"knowledge_base_documents\"},\"KnowledgeBasePermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"knowledgeBaseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"knowledge_base_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"role_id\"},{\"name\":\"permissionType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"permission_type\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"granted_at\"},{\"name\":\"knowledgeBase\",\"kind\":\"object\",\"type\":\"KnowledgeBase\",\"relationName\":\"KnowledgeBaseToKnowledgeBasePermission\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"KnowledgeBasePermissionToRole\"}],\"dbName\":\"knowledge_base_permissions\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"read_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":\"notifications\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resourceType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_type\"},{\"name\":\"resourceId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"resource_id\"},{\"name\":\"previousState\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"previous_state\"},{\"name\":\"newState\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"new_state\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"AgentConfiguration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"agent_type\"},{\"name\":\"modelName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_name\"},{\"name\":\"temperature\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxTokens\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"max_tokens\"},{\"name\":\"systemPrompt\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"system_prompt\"},{\"name\":\"additionalParameters\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"additional_parameters\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"}],\"dbName\":\"agent_configurations\"},\"Integration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"configuration\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IntegrationToUser\"},{\"name\":\"logs\",\"kind\":\"object\",\"type\":\"IntegrationLog\",\"relationName\":\"IntegrationToIntegrationLog\"}],\"dbName\":\"integrations\"},\"IntegrationLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"integrationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"integration_id\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"request_data\"},{\"name\":\"responseData\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"response_data\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"integration\",\"kind\":\"object\",\"type\":\"Integration\",\"relationName\":\"IntegrationToIntegrationLog\"}],\"dbName\":\"integration_logs\"},\"BidStatistics\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"periodStart\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"period_start\"},{\"name\":\"periodEnd\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"period_end\"},{\"name\":\"submittedBids\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"submitted_bids\"},{\"name\":\"wonBids\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"won_bids\"},{\"name\":\"totalValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"total_value\"},{\"name\":\"wonValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"won_value\"},{\"name\":\"successRate\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"success_rate\"},{\"name\":\"activeRfps\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"active_rfps\"},{\"name\":\"detailedMetrics\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"detailed_metrics\"},{\"name\":\"calculatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"calculated_at\"}],\"dbName\":\"bid_statistics\"},\"SubmissionRecord\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"project_id\"},{\"name\":\"artifactId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"artifact_id\"},{\"name\":\"portalName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"portal_name\"},{\"name\":\"submissionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"submission_id\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"submitted_by\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"submitted_at\"},{\"name\":\"submissionMetadata\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"submission_metadata\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToSubmissionRecord\"},{\"name\":\"artifact\",\"kind\":\"object\",\"type\":\"Artifact\",\"relationName\":\"ArtifactToSubmissionRecord\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubmissionRecordToUser\"}],\"dbName\":\"submission_records\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

