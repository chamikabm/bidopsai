# Development Dockerfile for bidops.ai web application
FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Copy package files
COPY apps/web/package*.json ./
RUN npm ci

# Development image
FROM base AS dev
WORKDIR /app

# Copy node_modules from deps stage
COPY --from=deps /app/node_modules ./node_modules

# Copy source code
COPY apps/web/ .

# Create next.config.js if it doesn't exist
RUN if [ ! -f next.config.js ] && [ ! -f next.config.ts ]; then \
  echo "/** @type {import('next').NextConfig} */" > next.config.js && \
  echo "const nextConfig = {" >> next.config.js && \
  echo "  experimental: {" >> next.config.js && \
  echo "    turbo: {" >> next.config.js && \
  echo "      rules: {" >> next.config.js && \
  echo "        '*.svg': {" >> next.config.js && \
  echo "          loaders: ['@svgr/webpack']," >> next.config.js && \
  echo "          as: '*.js'," >> next.config.js && \
  echo "        }," >> next.config.js && \
  echo "      }," >> next.config.js && \
  echo "    }," >> next.config.js && \
  echo "  }," >> next.config.js && \
  echo "};" >> next.config.js && \
  echo "" >> next.config.js && \
  echo "module.exports = nextConfig;" >> next.config.js; \
fi

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start the development server
CMD ["npm", "run", "dev"]