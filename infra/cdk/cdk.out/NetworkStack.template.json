{
 "Resources": {
  "Vpc8378EB38": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/Resource"
   }
  },
  "VpcPublicSubnet1Subnet5C2D37C4": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/Subnet"
   }
  },
  "VpcPublicSubnet1RouteTable6C95E38E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/RouteTable"
   }
  },
  "VpcPublicSubnet1RouteTableAssociation97140677": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet1DefaultRoute3DA9E72A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "VpcPublicSubnet1EIPD7E02669": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/EIP"
   }
  },
  "VpcPublicSubnet1NATGateway4D7517AA": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet1EIPD7E02669",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet1/NATGateway"
   }
  },
  "VpcPublicSubnet2Subnet691E08A3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.1.0/24",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/Subnet"
   }
  },
  "VpcPublicSubnet2RouteTable94F7E489": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/RouteTable"
   }
  },
  "VpcPublicSubnet2RouteTableAssociationDD5762D8": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "VpcPublicSubnet2DefaultRoute97F91067": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "RouteTableId": {
     "Ref": "VpcPublicSubnet2RouteTable94F7E489"
    }
   },
   "DependsOn": [
    "VpcVPCGWBF912B6E"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "VpcPublicSubnet2EIP3C605A87": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/EIP"
   }
  },
  "VpcPublicSubnet2NATGateway9182C01D": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "VpcPublicSubnet2EIP3C605A87",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "VpcPublicSubnet2Subnet691E08A3"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PublicSubnet2/NATGateway"
   }
  },
  "VpcPrivateAppSubnet1SubnetDB32FF69": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.2.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateApp"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAppSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet1/Subnet"
   }
  },
  "VpcPrivateAppSubnet1RouteTable41EB90F8": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAppSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet1/RouteTable"
   }
  },
  "VpcPrivateAppSubnet1RouteTableAssociationF5B029F7": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateAppSubnet1RouteTable41EB90F8"
    },
    "SubnetId": {
     "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateAppSubnet1DefaultRouteC7354940": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateAppSubnet1RouteTable41EB90F8"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateAppSubnet2Subnet2B6BEA34": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.3.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateApp"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAppSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet2/Subnet"
   }
  },
  "VpcPrivateAppSubnet2RouteTable55AB69FD": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAppSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet2/RouteTable"
   }
  },
  "VpcPrivateAppSubnet2RouteTableAssociation080AB45E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateAppSubnet2RouteTable55AB69FD"
    },
    "SubnetId": {
     "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateAppSubnet2DefaultRouteCE44632A": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateAppSubnet2RouteTable55AB69FD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAppSubnet2/DefaultRoute"
   }
  },
  "VpcPrivateAgentSubnet1SubnetA030A312": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.4.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateAgent"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAgentSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet1/Subnet"
   }
  },
  "VpcPrivateAgentSubnet1RouteTable40740ACA": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAgentSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet1/RouteTable"
   }
  },
  "VpcPrivateAgentSubnet1RouteTableAssociation66A76F3D": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateAgentSubnet1RouteTable40740ACA"
    },
    "SubnetId": {
     "Ref": "VpcPrivateAgentSubnet1SubnetA030A312"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateAgentSubnet1DefaultRoute477871DC": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateAgentSubnet1RouteTable40740ACA"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateAgentSubnet2Subnet335A65CF": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.5.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateAgent"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAgentSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet2/Subnet"
   }
  },
  "VpcPrivateAgentSubnet2RouteTableD810418F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateAgentSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet2/RouteTable"
   }
  },
  "VpcPrivateAgentSubnet2RouteTableAssociationF935CE44": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateAgentSubnet2RouteTableD810418F"
    },
    "SubnetId": {
     "Ref": "VpcPrivateAgentSubnet2Subnet335A65CF"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateAgentSubnet2DefaultRouteC34F1BBD": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateAgentSubnet2RouteTableD810418F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateAgentSubnet2/DefaultRoute"
   }
  },
  "VpcPrivateDataSubnet1Subnet588C411B": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.6.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateData"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateDataSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet1/Subnet"
   }
  },
  "VpcPrivateDataSubnet1RouteTable195FF6E1": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateDataSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet1/RouteTable"
   }
  },
  "VpcPrivateDataSubnet1RouteTableAssociationC76571EE": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateDataSubnet1RouteTable195FF6E1"
    },
    "SubnetId": {
     "Ref": "VpcPrivateDataSubnet1Subnet588C411B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet1/RouteTableAssociation"
   }
  },
  "VpcPrivateDataSubnet1DefaultRouteD6F6A328": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet1NATGateway4D7517AA"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateDataSubnet1RouteTable195FF6E1"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet1/DefaultRoute"
   }
  },
  "VpcPrivateDataSubnet2SubnetE20E2EF3": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.7.0/24",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "PrivateData"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateDataSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet2/Subnet"
   }
  },
  "VpcPrivateDataSubnet2RouteTableC94D484E": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc/PrivateDataSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet2/RouteTable"
   }
  },
  "VpcPrivateDataSubnet2RouteTableAssociation8D4511C4": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "VpcPrivateDataSubnet2RouteTableC94D484E"
    },
    "SubnetId": {
     "Ref": "VpcPrivateDataSubnet2SubnetE20E2EF3"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet2/RouteTableAssociation"
   }
  },
  "VpcPrivateDataSubnet2DefaultRouteBFFF5454": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "VpcPublicSubnet2NATGateway9182C01D"
    },
    "RouteTableId": {
     "Ref": "VpcPrivateDataSubnet2RouteTableC94D484E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/PrivateDataSubnet2/DefaultRoute"
   }
  },
  "VpcIGWD7BA715C": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/IGW"
   }
  },
  "VpcVPCGWBF912B6E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "VpcIGWD7BA715C"
    },
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/VPCGW"
   }
  },
  "VpcRestrictDefaultSecurityGroupCustomResourceC73DA2BE": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "Vpc8378EB38",
      "DefaultSecurityGroup"
     ]
    },
    "Account": "058264088919"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "VpcS3Endpoint4A3DE4B5": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "RouteTableIds": [
     {
      "Ref": "VpcPrivateAppSubnet1RouteTable41EB90F8"
     },
     {
      "Ref": "VpcPrivateAppSubnet2RouteTable55AB69FD"
     },
     {
      "Ref": "VpcPrivateAgentSubnet1RouteTable40740ACA"
     },
     {
      "Ref": "VpcPrivateAgentSubnet2RouteTableD810418F"
     },
     {
      "Ref": "VpcPrivateDataSubnet1RouteTable195FF6E1"
     },
     {
      "Ref": "VpcPrivateDataSubnet2RouteTableC94D484E"
     },
     {
      "Ref": "VpcPublicSubnet1RouteTable6C95E38E"
     },
     {
      "Ref": "VpcPublicSubnet2RouteTable94F7E489"
     }
    ],
    "ServiceName": {
     "Fn::Join": [
      "",
      [
       "com.amazonaws.",
       {
        "Ref": "AWS::Region"
       },
       ".s3"
      ]
     ]
    },
    "VpcEndpointType": "Gateway",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/S3Endpoint/Resource"
   }
  },
  "VpcBedrockEndpointSecurityGroupDBE9E8E4": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/BedrockEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/BedrockEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcBedrockEndpoint67430A7D": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": false,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcBedrockEndpointSecurityGroupDBE9E8E4",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.bedrock-runtime",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/BedrockEndpoint/Resource"
   }
  },
  "VpcSecretsManagerEndpointSecurityGroup9A5498C7": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/SecretsManagerEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/SecretsManagerEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcSecretsManagerEndpoint93E49F69": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcSecretsManagerEndpointSecurityGroup9A5498C7",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.secretsmanager",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/SecretsManagerEndpoint/Resource"
   }
  },
  "VpcSsmEndpointSecurityGroup579ACE06": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/SsmEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/SsmEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcSsmEndpointC46DB833": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcSsmEndpointSecurityGroup579ACE06",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.ssm",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/SsmEndpoint/Resource"
   }
  },
  "VpcEcrApiEndpointSecurityGroupA45F6D9E": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/EcrApiEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/EcrApiEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcEcrApiEndpoint25D60339": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcEcrApiEndpointSecurityGroupA45F6D9E",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.ecr.api",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/EcrApiEndpoint/Resource"
   }
  },
  "VpcEcrDockerEndpointSecurityGroup5D41A216": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/EcrDockerEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/EcrDockerEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcEcrDockerEndpoint53ED547B": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcEcrDockerEndpointSecurityGroup5D41A216",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.ecr.dkr",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/EcrDockerEndpoint/Resource"
   }
  },
  "VpcCloudWatchLogsEndpointSecurityGroupE044298A": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "NetworkStack/Vpc/CloudWatchLogsEndpoint/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": {
       "Fn::Join": [
        "",
        [
         "from ",
         {
          "Fn::GetAtt": [
           "Vpc8378EB38",
           "CidrBlock"
          ]
         },
         ":443"
        ]
       ]
      },
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Vpc"
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/CloudWatchLogsEndpoint/SecurityGroup/Resource"
   }
  },
  "VpcCloudWatchLogsEndpointA6195533": {
   "Type": "AWS::EC2::VPCEndpoint",
   "Properties": {
    "PrivateDnsEnabled": true,
    "SecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "VpcCloudWatchLogsEndpointSecurityGroupE044298A",
       "GroupId"
      ]
     }
    ],
    "ServiceName": "com.amazonaws.us-east-1.logs",
    "SubnetIds": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "VpcEndpointType": "Interface",
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Vpc/CloudWatchLogsEndpoint/Resource"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:aws:ec2:us-east-1:058264088919:security-group/",
             {
              "Fn::GetAtt": [
               "Vpc8378EB38",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-058264088919-us-east-1",
     "S3Key": "dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": "nodejs18.x",
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.dd5711540f04e06aa955d7f4862fc04e8cdea464cb590dae91ed2976bb78098e",
    "aws:asset:property": "Code"
   }
  },
  "AlbSecurityGroup86A59E99": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for ALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow HTTPS",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/AlbSecurityGroup/Resource"
   }
  },
  "Alb": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "AlbSecurityGroup86A59E99",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
     },
     {
      "Ref": "VpcPublicSubnet2Subnet691E08A3"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "VpcPublicSubnet1DefaultRoute3DA9E72A",
    "VpcPublicSubnet1RouteTableAssociation97140677",
    "VpcPublicSubnet2DefaultRoute97F91067",
    "VpcPublicSubnet2RouteTableAssociationDD5762D8"
   ],
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Alb/Resource"
   }
  },
  "InternalAlbSecurityGroup32D71C5A": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Security group for internal ALB",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "SecurityGroupIngress": [
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": "Allow HTTP from VPC",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     },
     {
      "CidrIp": {
       "Fn::GetAtt": [
        "Vpc8378EB38",
        "CidrBlock"
       ]
      },
      "Description": "Allow HTTPS from VPC",
      "FromPort": 443,
      "IpProtocol": "tcp",
      "ToPort": 443
     }
    ],
    "VpcId": {
     "Ref": "Vpc8378EB38"
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/InternalAlbSecurityGroup/Resource"
   }
  },
  "InternalAlb": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internal",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "InternalAlbSecurityGroup32D71C5A",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
     },
     {
      "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/InternalAlb/Resource"
   }
  },
  "WafAcl": {
   "Type": "AWS::WAFv2::WebACL",
   "Properties": {
    "DefaultAction": {
     "Allow": {}
    },
    "Rules": [
     {
      "Name": "AWSManagedRulesCommonRuleSet",
      "OverrideAction": {
       "None": {}
      },
      "Priority": 1,
      "Statement": {
       "ManagedRuleGroupStatement": {
        "Name": "AWSManagedRulesCommonRuleSet",
        "VendorName": "AWS"
       }
      },
      "VisibilityConfig": {
       "CloudWatchMetricsEnabled": true,
       "MetricName": "AWSManagedRulesCommonRuleSetMetric",
       "SampledRequestsEnabled": true
      }
     }
    ],
    "Scope": "REGIONAL",
    "VisibilityConfig": {
     "CloudWatchMetricsEnabled": true,
     "MetricName": "WafAcl",
     "SampledRequestsEnabled": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/WafAcl"
   }
  },
  "WafAssociation": {
   "Type": "AWS::WAFv2::WebACLAssociation",
   "Properties": {
    "ResourceArn": {
     "Ref": "Alb"
    },
    "WebACLArn": {
     "Fn::GetAtt": [
      "WafAcl",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/WafAssociation"
   }
  },
  "Certificate4E7ABB08": {
   "Type": "AWS::CertificateManager::Certificate",
   "Properties": {
    "DomainName": "antonputra.com",
    "DomainValidationOptions": [
     {
      "DomainName": "antonputra.com",
      "HostedZoneId": "Z0048429115V80QTCDKSQ"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "NetworkStack/Certificate"
     }
    ],
    "ValidationMethod": "DNS"
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/Certificate/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21RwW7CMAz9Fu6hGyDtXhBCSGirYGLHyU1d8GiTKnFACPXf5xRGe9jJ7z0/O7YzTSbTt+R1BBc/1sVpXFGe3HYM+qRE+r6hnia3faPVojT7bKGykFekdyE3yFHr0dYGxk/IK+z1Xku9t5qAyZqnOYLlOovhHXgFjBe4qszRWWDfeG0YneA/w32SB0tZZj3WaFg9FBl2aYrGkuGH9Um7TiVoHHp2qIMjvq6cDU03+lBoFVbgmXRlocihAqPJHM5ylLRp5BLdRhvJzbscuthhyFt1gTL6Rf/CPF1s1BMNjtIq8TKVsSPWYOCATmp6LVYNaNuqLXobnJZM8Gzrnsp5/09lzp6pQDcHj0oeR5afPsg+seYjcBO4VdmVj9a8zJLJLJmNfjzR2AXDVGOyvcdf0lac1zQCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "NetworkStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "VpcId": {
   "Description": "VPC ID",
   "Value": {
    "Ref": "Vpc8378EB38"
   },
   "Export": {
    "Name": "VpcId"
   }
  },
  "PublicSubnetIds": {
   "Description": "Public subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "VpcPublicSubnet1Subnet5C2D37C4"
      },
      ",",
      {
       "Ref": "VpcPublicSubnet2Subnet691E08A3"
      }
     ]
    ]
   },
   "Export": {
    "Name": "PublicSubnetIds"
   }
  },
  "PrivateAppSubnetIds": {
   "Description": "Private app subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "VpcPrivateAppSubnet1SubnetDB32FF69"
      },
      ",",
      {
       "Ref": "VpcPrivateAppSubnet2Subnet2B6BEA34"
      }
     ]
    ]
   },
   "Export": {
    "Name": "PrivateAppSubnetIds"
   }
  },
  "PrivateAgentSubnetIds": {
   "Description": "Private agent subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "VpcPrivateAgentSubnet1SubnetA030A312"
      },
      ",",
      {
       "Ref": "VpcPrivateAgentSubnet2Subnet335A65CF"
      }
     ]
    ]
   },
   "Export": {
    "Name": "PrivateAgentSubnetIds"
   }
  },
  "PrivateDataSubnetIds": {
   "Description": "Private data subnet IDs",
   "Value": {
    "Fn::Join": [
     "",
     [
      {
       "Ref": "VpcPrivateDataSubnet1Subnet588C411B"
      },
      ",",
      {
       "Ref": "VpcPrivateDataSubnet2SubnetE20E2EF3"
      }
     ]
    ]
   },
   "Export": {
    "Name": "PrivateDataSubnetIds"
   }
  },
  "AlbDnsName": {
   "Description": "Public ALB DNS name",
   "Value": {
    "Fn::GetAtt": [
     "Alb",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "AlbDnsName"
   }
  },
  "InternalAlbDnsName": {
   "Description": "Internal ALB DNS name",
   "Value": {
    "Fn::GetAtt": [
     "InternalAlb",
     "DNSName"
    ]
   },
   "Export": {
    "Name": "InternalAlbDnsName"
   }
  },
  "HostedZoneId": {
   "Description": "Route 53 hosted zone ID (empty if not created/lookup not performed)",
   "Value": "Z0048429115V80QTCDKSQ",
   "Export": {
    "Name": "HostedZoneId"
   }
  },
  "CertificateArn": {
   "Description": "ACM certificate ARN (empty if not created)",
   "Value": {
    "Ref": "Certificate4E7ABB08"
   },
   "Export": {
    "Name": "CertificateArn"
   }
  },
  "PrivateDataSubnet1Id": {
   "Description": "Private data subnet 1 ID",
   "Value": {
    "Ref": "VpcPrivateDataSubnet1Subnet588C411B"
   },
   "Export": {
    "Name": "PrivateDataSubnet1Id"
   }
  },
  "PrivateDataSubnet2Id": {
   "Description": "Private data subnet 2 ID",
   "Value": {
    "Ref": "VpcPrivateDataSubnet2SubnetE20E2EF3"
   },
   "Export": {
    "Name": "PrivateDataSubnet2Id"
   }
  },
  "ExportsOutputRefVpcPrivateDataSubnet1Subnet588C411B3A8F06AF": {
   "Value": {
    "Ref": "VpcPrivateDataSubnet1Subnet588C411B"
   },
   "Export": {
    "Name": "NetworkStack:ExportsOutputRefVpcPrivateDataSubnet1Subnet588C411B3A8F06AF"
   }
  },
  "ExportsOutputRefVpcPrivateDataSubnet2SubnetE20E2EF38A6298BE": {
   "Value": {
    "Ref": "VpcPrivateDataSubnet2SubnetE20E2EF3"
   },
   "Export": {
    "Name": "NetworkStack:ExportsOutputRefVpcPrivateDataSubnet2SubnetE20E2EF38A6298BE"
   }
  },
  "ExportsOutputRefVpc8378EB38272D6E3A": {
   "Value": {
    "Ref": "Vpc8378EB38"
   },
   "Export": {
    "Name": "NetworkStack:ExportsOutputRefVpc8378EB38272D6E3A"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}